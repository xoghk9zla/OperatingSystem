***운영체제 19장 페이징 : 더 빠른 변환(TLB)(ppt229~)***
***전체적인 이해***

~페이징의 문제점 1.
페이지 테이블을 접근하기 위한, 반복적인 메모리 읽기 수행은 성능저하를 가져온다.~

TLB : 변환-색인 버퍼의 줄임말, 주소변환 캐시 라고도 한다.
->자주 참조되는 가상주소, 실주소 변환 테이블에 대한 정보를 저장하는 하드웨어 캐시

페이징 알고리즘
1.가상 페이지 번호를 추출한다.
2.해당 VPN이 TLB에 탑재된 테이블 리스트에 존재하는지 확인.
3.존재할경우(TLB히트) PFN추출
  없을 경우(TLB미스) 페이지 테이플에 접근 후 해당 내용을 TLB로 읽어오고, 
    재실행 후 PFN추출
**여기서 TLB미스일 경우 해당 내용을 TLB로 읽어오는 과정을 
  하드웨어가 담당한다.(하드웨어 명령어라고 불리는 CISC 혹은 RISC)
  CISC - 하드웨어의 복잡한 명령어의 통칭
  RISC - 예외를 발생시켜 Trap handler라는 코드를 실행 
  Trap handler - TLB미스를 처리하기위한 운영체제 코드


TLB는 문맥교환이 일어났을 때, 문제를 발생시킨다.
(다른 프로그램의 페이지 테이블 내용을 담고 있기 때문)
-TLB가 가지고 있는 valid bit를 0으로 바꿔줌으로써 해결할 수도 있지만,
 문맥교환이 일어날때마다 TLB미스의 발생확률이 커지므로, 성능에 부담이 올 수 있다.
-때문에 ASID라는 프로세스 식별자를 추가하여, 어느 프로세스가 실행중인지 파악한다.
-TLB의 캐시 교체 정책에는 보통 LRU를 사용한다.


실제 TLB의 구성요소

global bit - global 형태로 공유되는지 여부
ASID - 현재 프로세스가 사용할 수 있는 정보인지 알려준다.
       (문맥 교환이 일어났을 때, 다른 프로세스의 페이지 테이블을 참조하지 않기 위해)
dirty bit - TLB정보 내 해당 페이지 테이블 내용이 갱신되었는지 여부
valid bit - 유효한 정보인지 여부
자세한 건 ppt 262 참조