***운영체제 16장 세그멘테이션(ppt 80~)***

스택과 힙사이의 공간이 사용되지 않더라도, 
주소공간을 물리 메모리에 재배치할때, 물리메모리를 차지한다.
-이는 베이스, 바운드 방식이 유연성이 없고, 메모리 낭비가 심하다는 것을 보여준다.
-이 문제 해결을 위해 세그멘테이션 기법을 사용한다.

세그멘테이션은 코드, 스택, 힙 등의 각 영역에 베이스 바운드를 갖게 한다.
이렇게 하면, 각 영역을 서로 다른 물리 메모리 위치에 배치할 수 있다.
따라서 사용되지 않는 가상주소 공간이 물리메모리를 차지하는 것을 방지한다.

***세그멘테이션을 이용한 물리 주소 변환 숙지***
***실제로 스택 영역은 저장할 수록 아래에서 위로 증가하는 메모리라 음수 오프셋으로 바꿔줘야함 -> 반대로 나머지 영역은 그럴 필요가 없음, 음수 오프셋으로 바꿔주지 않아도됨***

**스택 영역 물리 주소 변환
ex) 물리주소 28KB에 배치되어 있는 스택영역의 크기가 2KB이다.
   가상주소가 16~14KB라고 가정할 때, 가상주소 15KB를 물리 주소로 변환하라.
15KB를 2진수로 표현한다면, 11 1100 0000 0000

상위 2비트를 사용하여 세그먼트로 지정. 따라서 (11) 1100 0000 0000
->이 때 세그먼트 데이터(여기서는 11)에 따라 어느 영역에 해당하는지 판별할 수 있다.

이렇게 되면 1100 0000 0000 (3KB)의 오프셋이 남는다.
여기서 세그먼트의 최대 크기 (4KB)를 빼면 음수 오프셋(-1KB)이 나오는데,
이 것을 물리주소(28KB)에 더해주면 해당 물리 메모리 값(27KB)이 나온다.


세그멘테이션은 가상주소가 바운드 레지스터에 비교 했을 때, 유효한 주소인지 검사하는 것 말고도 다른 것을 검사해야 한다.

-다른 프로세스에서 공유(읽기/쓰기)가 가능한 형태인지
하드웨어에서 protection bit를 추가함으로써 가능해진다.
-접근이 가능한지(접근 권한 레벨)

